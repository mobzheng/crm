<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:*.properties</value>
            </list>
        </property>
    </bean>
    <!--<context:property-placeholder location="classpath*:db.properties"/>-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${sql.driver}"/>
        <property name="url" value="${sql.url}"/>
        <property name="username" value="${sql.username}"/>
        <property name="password" value="${sql.password}"/>
    </bean>

    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--<property name="configLocation" value="spring-mybatis-config.xml"/>-->
        <property name="dataSource" ref="dataSource"/>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <!--使用下面的方式配置参数，一行配置一个 -->
                        <value>
                            params=value1
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.sm.crm.mapper"/>
    </bean>
    <context:component-scan base-package="com.sm.crm.service"/>
    <!--<context:component-scan base-package="com.sm.crm.aop"/>-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven proxy-target-class="true" transaction-manager="transactionManager"/>
    <!--<aop:aspectj-autoproxy proxy-target-class="true"/>-->

    <bean class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="${mail.from}"/>
    </bean>

    <!--spring context -support包下的 -->
    <bean class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="username" value="${mail.from}"/>
        <!--表示我们的授权码-->
        <property name="password" value="${mail.password}"/>
        <property name="defaultEncoding" value="utf-8"/>
        <property name="host" value="${mail.host}"/>
        <property name="javaMailProperties">
            <props>
                <!-- 设置认证开关 -->
                <prop key="mail.smtp.auth">true</prop>
                <!-- 启动调试开关 -->
                <prop key="mail.debug">true</prop>
                <!-- 设置发送延时 -->
                <prop key="mail.smtp.timeout">0</prop>
            </props>
        </property>
    </bean>
</beans>